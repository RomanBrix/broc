{"ast":null,"code":"import _classCallCheck from \"/Users/romabrix/GIT/brocompany/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/romabrix/GIT/brocompany/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/romabrix/GIT/brocompany/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/romabrix/GIT/brocompany/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/romabrix/GIT/brocompany/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/romabrix/GIT/brocompany/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/romabrix/GIT/brocompany/client/src/js/components/layers/DraftJs.js\";\nimport React, { Component } from 'react';\nimport { EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\nimport Editor, { composeDecorators } from 'draft-js-plugins-editor'; // import {\n//     convertFromRaw,\n//     EditorState,\n// } from 'draft-js';\n\nimport createImagePlugin from 'draft-js-image-plugin';\nimport createAlignmentPlugin from 'draft-js-alignment-plugin';\nimport createFocusPlugin from 'draft-js-focus-plugin';\nimport createResizeablePlugin from 'draft-js-resizeable-plugin';\nimport createBlockDndPlugin from 'draft-js-drag-n-drop-plugin'; // import createDragNDropUploadPlugin from 'draft-js-drag-n-drop-upload-plugin';\n// import 'draft-js-image-plugin/lib/plugin.css';\n// const imagePlugin = createImagePlugin();\n\nvar focusPlugin = createFocusPlugin();\nvar resizeablePlugin = createResizeablePlugin();\nvar blockDndPlugin = createBlockDndPlugin();\nvar alignmentPlugin = createAlignmentPlugin(); // eslint-disable-next-line\n\nvar AlignmentTool = alignmentPlugin.AlignmentTool;\nvar decorator = composeDecorators(resizeablePlugin.decorator, // alignmentPlugin.decorator,\nfocusPlugin.decorator, blockDndPlugin.decorator);\nvar imagePlugin = createImagePlugin({\n  decorator: decorator\n});\nvar plugins = [blockDndPlugin, focusPlugin, // alignmentPlugin,\nresizeablePlugin, imagePlugin];\n\nvar DraftJs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DraftJs, _Component);\n\n  function DraftJs(props) {\n    var _this;\n\n    _classCallCheck(this, DraftJs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DraftJs).call(this, props));\n\n    _this.onChange = function (editorState) {\n      var saveDraftJsContent = _this.props.saveDraftJsContent;\n\n      _this.setState({\n        editorState: editorState\n      });\n\n      saveDraftJsContent(convertToRaw(editorState.getCurrentContent()));\n    };\n\n    _this.focus = function () {\n      _this.editor.focus();\n    };\n\n    console.log(props.content);\n    _this.state = {\n      editorState: props.content !== null ? EditorState.createWithContent(convertFromRaw(props.content)) : EditorState.createEmpty() // editorState: EditorState.createEmpty()\n\n    };\n    _this.handleKeyCommand = _this.handleKeyCommand.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DraftJs, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      // console.log(this.props);\n      console.log(this.props.content === null && newProps.content !== null);\n\n      if (this.props.content === null && newProps.content !== null) {\n        this.setState({\n          editorState: EditorState.createWithContent(convertFromRaw(newProps.content))\n        });\n      }\n    }\n  }, {\n    key: \"makeSmth\",\n    value: function makeSmth(arg) {\n      console.log(arg.toLowerCase());\n      this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, arg.toLowerCase()));\n    }\n  }, {\n    key: \"handleKeyCommand\",\n    value: function handleKeyCommand(command, editorState) {\n      var newState = RichUtils.handleKeyCommand(editorState, command);\n      console.log(command);\n\n      if (newState) {\n        this.onChange(newState);\n        return 'handled';\n      }\n\n      return 'not-handled';\n    }\n  }, {\n    key: \"toggleBlockType\",\n    value: function toggleBlockType(blockType) {\n      this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"editor\",\n        onClick: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(BlockStyleControls, {\n        editorState: this.state.editorState,\n        onToggle: this.toggleBlockType.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Editor, {\n        editorState: this.state.editorState,\n        onChange: this.onChange,\n        plugins: plugins,\n        ref: function ref(element) {\n          _this2.editor = element;\n        },\n        handleKeyCommand: this.handleKeyCommand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DraftJs;\n}(Component);\n\nexport { DraftJs as default };\nvar BLOCK_TYPES = [{\n  label: 'H1',\n  style: 'header-one'\n}, {\n  label: 'H2',\n  style: 'header-two'\n}, {\n  label: 'H3',\n  style: 'header-three'\n}, {\n  label: 'H4',\n  style: 'header-four'\n}, // {label: 'H5', style: 'header-five'},\n// {label: 'H6', style: 'header-six'},\n// {label: 'Blockquote', style: 'blockquote'},\n{\n  label: 'UL',\n  style: 'unordered-list-item'\n}, {\n  label: 'OL',\n  style: 'ordered-list-item'\n}, // {label: 'Code Block', style: 'code-block'},\n{\n  label: 'Text',\n  style: 'unstyled'\n}];\n\nvar StyleButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StyleButton, _React$Component);\n\n  function StyleButton() {\n    var _this3;\n\n    _classCallCheck(this, StyleButton);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(StyleButton).call(this));\n\n    _this3.onToggle = function (e) {\n      e.preventDefault();\n\n      _this3.props.onToggle(_this3.props.style);\n    };\n\n    return _this3;\n  }\n\n  _createClass(StyleButton, [{\n    key: \"render\",\n    value: function render() {\n      var className = 'RichEditor-styleButton';\n\n      if (this.props.active) {\n        className += ' RichEditor-activeButton';\n      }\n\n      return React.createElement(\"div\", {\n        className: className,\n        onMouseDown: this.onToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.props.label);\n    }\n  }]);\n\n  return StyleButton;\n}(React.Component);\n\nvar BlockStyleControls = function BlockStyleControls(props) {\n  var editorState = props.editorState;\n  var selection = editorState.getSelection();\n  var blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  return React.createElement(\"div\", {\n    className: \"RichEditor-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, BLOCK_TYPES.map(function (type) {\n    return React.createElement(StyleButton, {\n      key: type.label,\n      active: type.style === blockType,\n      label: type.label,\n      onToggle: props.onToggle,\n      style: type.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    });\n  }));\n};","map":{"version":3,"sources":["/Users/romabrix/GIT/brocompany/client/src/js/components/layers/DraftJs.js"],"names":["React","Component","EditorState","RichUtils","convertToRaw","convertFromRaw","Editor","composeDecorators","createImagePlugin","createAlignmentPlugin","createFocusPlugin","createResizeablePlugin","createBlockDndPlugin","focusPlugin","resizeablePlugin","blockDndPlugin","alignmentPlugin","AlignmentTool","decorator","imagePlugin","plugins","DraftJs","props","onChange","editorState","saveDraftJsContent","setState","getCurrentContent","focus","editor","console","log","content","state","createWithContent","createEmpty","handleKeyCommand","bind","newProps","arg","toLowerCase","toggleInlineStyle","command","newState","blockType","toggleBlockType","element","BLOCK_TYPES","label","style","StyleButton","onToggle","e","preventDefault","className","active","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","getType","map","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { EditorState, RichUtils, convertToRaw, convertFromRaw} from 'draft-js';\nimport Editor, { composeDecorators } from 'draft-js-plugins-editor';\n// import {\n//     convertFromRaw,\n//     EditorState,\n// } from 'draft-js';\n\nimport createImagePlugin from 'draft-js-image-plugin';\n\nimport createAlignmentPlugin from 'draft-js-alignment-plugin';\n\nimport createFocusPlugin from 'draft-js-focus-plugin';\n\nimport createResizeablePlugin from 'draft-js-resizeable-plugin';\n\nimport createBlockDndPlugin from 'draft-js-drag-n-drop-plugin';\n\n// import createDragNDropUploadPlugin from 'draft-js-drag-n-drop-upload-plugin';\n// import 'draft-js-image-plugin/lib/plugin.css';\n\n// const imagePlugin = createImagePlugin();\nconst focusPlugin = createFocusPlugin();\nconst resizeablePlugin = createResizeablePlugin();\nconst blockDndPlugin = createBlockDndPlugin();\nconst alignmentPlugin = createAlignmentPlugin();\n// eslint-disable-next-line\nconst { AlignmentTool } = alignmentPlugin;\n\nconst decorator = composeDecorators(\n    resizeablePlugin.decorator,\n    // alignmentPlugin.decorator,\n    focusPlugin.decorator,\n    blockDndPlugin.decorator\n);\nconst imagePlugin = createImagePlugin({ decorator });\n\nconst plugins = [\n    blockDndPlugin,\n    focusPlugin,\n    // alignmentPlugin,\n    resizeablePlugin,\n    imagePlugin\n];\n\n\n\nexport default class DraftJs extends Component {\n    constructor(props){\n        super(props);\n\n        console.log(props.content);\n        this.state = {\n            editorState: props.content !== null ? EditorState.createWithContent(convertFromRaw(props.content)) : EditorState.createEmpty() ,\n            // editorState: EditorState.createEmpty()\n        };\n        this.handleKeyCommand = this.handleKeyCommand.bind(this);\n\n    }\n\n    componentWillReceiveProps(newProps){\n        // console.log(this.props);\n        console.log(this.props.content === null && newProps.content !== null);\n        if(this.props.content === null && newProps.content !== null){\n            this.setState({\n                editorState: EditorState.createWithContent(convertFromRaw(newProps.content))\n            })\n        }\n    }\n    onChange = (editorState) => {\n        const { saveDraftJsContent } = this.props;\n        this.setState({editorState,});\n        saveDraftJsContent(convertToRaw(editorState.getCurrentContent()));\n\n    };\n\n\n    focus = () => {\n        this.editor.focus();\n    };\n\n\n    makeSmth(arg){\n        console.log(arg.toLowerCase());\n        this.onChange(RichUtils.toggleInlineStyle(\n            this.state.editorState,\n            arg.toLowerCase()\n        ));\n    }\n\n    handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        console.log(command);\n        if (newState) {\n            this.onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    toggleBlockType(blockType) {\n        this.onChange(\n            RichUtils.toggleBlockType(\n                this.state.editorState,\n                blockType\n            )\n        );\n    }\n\n\n    render() {\n        return (\n            <div className=\"editor\" onClick={this.focus}>\n                <div className=\"controls\">\n                    <BlockStyleControls\n                        editorState={this.state.editorState}\n                        onToggle={this.toggleBlockType.bind(this)}\n                    />\n                    {/*<div className=\"top\">*/}\n                        {/*<button onClick={()=>{*/}\n                            {/*this.makeSmth('BOLD')*/}\n                        {/*}}>Bold</button>*/}\n                        {/*<button onClick={()=>{*/}\n                            {/*this.makeSmth('ITALIC')*/}\n                        {/*}}>Italic</button>*/}\n                        {/*<button onClick={()=>{*/}\n                            {/*this.makeSmth('UNDERLINE')*/}\n                        {/*}}>UnderLine</button>*/}\n                    {/*</div>*/}\n                </div>\n                <Editor\n                    editorState={this.state.editorState}\n                    onChange={this.onChange}\n                    plugins={plugins}\n                    ref={(element) => { this.editor = element; }}\n                    handleKeyCommand={this.handleKeyCommand}\n\n                />\n                {/*<AlignmentTool />*/}\n            </div>\n        )\n    }\n}\n\n\n\n\n\nconst BLOCK_TYPES = [\n    {label: 'H1', style: 'header-one'},\n    {label: 'H2', style: 'header-two'},\n    {label: 'H3', style: 'header-three'},\n    {label: 'H4', style: 'header-four'},\n    // {label: 'H5', style: 'header-five'},\n    // {label: 'H6', style: 'header-six'},\n    // {label: 'Blockquote', style: 'blockquote'},\n    {label: 'UL', style: 'unordered-list-item'},\n    {label: 'OL', style: 'ordered-list-item'},\n    // {label: 'Code Block', style: 'code-block'},\n    {label: 'Text', style: 'unstyled'},\n\n];\nclass StyleButton extends React.Component {\n    constructor() {\n        super();\n        this.onToggle = (e) => {\n            e.preventDefault();\n            this.props.onToggle(this.props.style);\n        };\n    }\n\n    render() {\n        let className = 'RichEditor-styleButton';\n        if (this.props.active) {\n            className += ' RichEditor-activeButton';\n        }\n\n        return (\n            <div className={className} onMouseDown={this.onToggle}>\n                {this.props.label}\n            </div>\n        );\n    }\n}\n\nconst BlockStyleControls = (props) => {\n    const {editorState} = props;\n    const selection = editorState.getSelection();\n    const blockType = editorState\n        .getCurrentContent()\n        .getBlockForKey(selection.getStartKey())\n        .getType();\n\n    return (\n        <div className=\"RichEditor-controls\">\n            {BLOCK_TYPES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={type.style === blockType}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}